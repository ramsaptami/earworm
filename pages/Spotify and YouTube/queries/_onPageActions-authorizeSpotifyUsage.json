{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "authorizeSpotifyUsage",
    "fullyQualifiedName": "_onPageActions.authorizeSpotifyUsage",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Spotify and YouTube",
    "collectionId": "Spotify and YouTube__onPageActions",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  console.log(\"Step 1: Calling SpotifyAuthOp after page load\");\n  console.log(appsmith.URL.queryParams.code ?? 'No auth code found in the URL');\n  if (appsmith.URL.queryParams.code != null) {\n    console.log('Step 2: URL returned an auth code');\n    return SpotifySettings.requestCall();\n  } else {\n    return SpotifySettings.refreshCall();\n  }\n}",
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  console.log(\"Step 1: Calling SpotifyAuthOp after page load\");\n  console.log(appsmith.URL.queryParams.code ?? 'No auth code found in the URL');\n  if (appsmith.URL.queryParams.code != null) {\n    console.log('Step 2: URL returned an auth code');\n    return SpotifySettings.requestCall();\n  } else {\n    return SpotifySettings.refreshCall();\n  }\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Spotify and YouTube__onPageActions.authorizeSpotifyUsage",
  "deleted": false,
  "gitSyncId": "61ea4a44361846772cfb117d_63236786d945b72ee5699523"
}