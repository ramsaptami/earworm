{
  "unpublishedCollection": {
    "name": "_onPageActions",
    "pageId": "Spotify and YouTube",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tauthorizeSpotifyUsage: async () => {\n\t\tconsole.log(\"Step 1: Calling SpotifyAuthOp after page load\")\n\t\tconsole.log(appsmith.URL.queryParams.code ?? 'No auth code found in the URL' )\t\t\n\t\tif(appsmith.URL.queryParams.code != null) {\n\t\t\tconsole.log('Step 2: URL returned an auth code')\n\t\t\treturn SpotifySettings.requestCall()\n\t\t} else {\n\t\t\t//console.log('Step 2: ')\n\t\t\treturn SpotifySettings.refreshCall()}\n\t\t\n\t\t/*return SpotifySettings.authDecisionMaker()\n\t\t\t.then(() => {\n\t\t\t\tconsole.log(\"Step 5: Coming back to onPageLoad flow - app has been authorized from nested calls. \\\\n Next is to run all Spotify API's\")\n\t\t\t\treturn SpotifyAPIs.runAllSpotifyAPIs()\t\n\t\t\t})\n\t\t.catch((error) => {\n\t\t\tshowAlert(\"There's an issue connecting Spotify to your app ðŸ’” \\\\n \" + error.toString(), 'error')\n\t\t\tconsole.log(\"Abandoning all steps since something went wrong\" + error.toString()) })*/ \n\t},\n\t\n\t/*authorizeSpotifyUsage: () => { \n\t\tconsole.log(appsmith.URL.queryParams.code ?? 'No auth code found in the URL')\n\t\tconsole.log(\"Step 1: Calling SpotifyAuthOp after page load\")\n\t\treturn SpotifySettings.authDecisionMaker()\n\t\t\t.then(() => {\n\t\t\t\tconsole.log(\"Step 5: Coming back to onPageLoad flow - app has been authorized from nested calls. \\\\n Next is to run all Spotify API's\")\n\t\t\t\treturn SpotifyAPIs.runAllSpotifyAPIs()\t\n\t\t\t})\n\t\t.catch((error) => {\n\t\t\tshowAlert(\"There's an issue connecting Spotify to your app ðŸ’” \\\\n \" + error.toString(), 'error')\n\t\t\tconsole.log(\"Abandoning all steps since something went wrong\" + error.toString()) })\n\t}*/\n\t\n\tretih: () => {\n\t\treturn appsmith.URL.queryParams\n\t}\n}",
    "variables": []
  },
  "id": "Spotify and YouTube__onPageActions",
  "deleted": false,
  "gitSyncId": "61ea4a44361846772cfb117d_623acab6ee795b27770e7868"
}