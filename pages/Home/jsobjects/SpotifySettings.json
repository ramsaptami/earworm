{
  "unpublishedCollection": {
    "name": "SpotifySettings",
    "pageId": "Home",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\n\t//-----Calling requestToken API and saving authorization code to store-----//\n\trequestCall: async () => {\n\t\ttry{\n\t\t\tconsole.log('STEP 2: Query param contains auth code so proceeding with request flow')\n\n\t\t\tconst requestResponse = await requestToken.run()\n\t\t\tconsole.log(\"STEP 3: *REQUEST CALL* Successfully ran requestToken query \")\n\n\t\t\tlet tokens = [\n\t\t\t\tstoreValue('authToken', requestResponse.access_token),\n\t\t\t\tstoreValue('refreshToken', requestResponse.refresh_token),\n\t\t\t]\n\n\t\t\tawait Promise.all(tokens)\n\n\t\t\tconsole.log(\"Auth code in store is \" + appsmith.store.authToken)\n\t\t\tconsole.log(\"Refresh token in store is \" + appsmith.store.refreshToken)\n\t\t}\tcatch(err){ \n\t\t\tconsole.log(err.message + \" & returned a \" + requestToken.responseMeta.statusCode)\n\t\t\tthis.refreshCall()\n\t\t}\n\t},\n\n\t//-----Calling refreshToken and replacing auth code in store-----//\n\trefreshCall: async () => {\n\t\ttry{\n\t\t\tappsmith.store.refreshToken ? \n\t\t\t\tconsole.log(\"STEP 2: *REFRESH CALL* Code before refresh is \\\\n\" + appsmith.store.authToken)\n\t\t\t: console.log('Refresh token has expired')\n\n\t\t\tconst refreshResponse = await refreshToken.run()\n\t\t\tconsole.log(\"STEP 3: Trying to get auth code using refreshToken\")\n\n\t\t\tstoreValue('authToken', refreshResponse.access_token)\n\n\t\t\tawait console.log(\"STEP 4: *REFRESH CALL* Code after refresh is \\\\n\" + appsmith.store.authToken)\n\t\t\tconsole.log(\"Step 5: Going back to onPageLoad flow since app has been authorized. \\\\n Next is to run all Spotify API's\")\n\t\t}catch(error){\n\t\t\tconsole.log(error.message + \" & returned a \" + refreshToken.responseMeta.statusCode)\n\t\t}\n\t}\n}",
    "variables": [],
    "userPermissions": []
  },
  "id": "Home_SpotifySettings",
  "deleted": false,
  "gitSyncId": "61ea4a44361846772cfb117d_63a3e7e9342bf716e62d6bc0"
}